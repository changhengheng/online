import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.19358895.js";const C=JSON.parse('{"title":"lowdb","description":"","frontmatter":{},"headers":[],"relativePath":"program/frontend/Node/chapter4/练习4_lowdb.md","filePath":"program/frontend/Node/chapter4/练习4_lowdb.md","lastUpdated":1697452647000}'),p={name:"program/frontend/Node/chapter4/练习4_lowdb.md"},o=l(`<h1 id="lowdb" tabindex="-1">lowdb <a class="header-anchor" href="#lowdb" aria-label="Permalink to &quot;lowdb&quot;">​</a></h1><p>lowdb是一个本地的json文件数据库，就是用一个json文件来充当数据库，实现增删改查这些数据库的基本的功能。</p><p>lowdb用来管理数据，实现数据的持久化存储。</p><p>了解即可，项目中用的不多。</p><p>安装：<code>npm install lowdb@1.0.0</code></p><p>使用：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 以1.0.0版本为例</span></span>
<span class="line"><span style="color:#6A737D;">// lowdb</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">low</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;lowdb&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">// 读写适配器，用来读写json文件 </span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">FileSync</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;lowdb/adapters/FileSync&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 参数一是json文件地址，参数二是一个可选的配置对象 https://www.npmjs.com/package/lowdb/v/1.0.0</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">adapter</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FileSync</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;db.json&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">// 创建一个lodash chain，拥有一些属性和方法，用来操作数据库</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">low</span><span style="color:#E1E4E8;">(adapter)</span></span>
<span class="line"><span style="color:#6A737D;">// 初始化数据 defaults()设置默认值 write()将这些初始值写入lowdb</span></span>
<span class="line"><span style="color:#E1E4E8;">db.</span><span style="color:#B392F0;">defaults</span><span style="color:#E1E4E8;">({ posts: [], user: {} }).</span><span style="color:#B392F0;">write</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 写入数据</span></span>
<span class="line"><span style="color:#E1E4E8;">db.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;posts&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 获取posts数据</span></span>
<span class="line"><span style="color:#E1E4E8;">  .</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">({ id: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, title: </span><span style="color:#9ECBFF;">&#39;lowdb is awesome&#39;</span><span style="color:#E1E4E8;">}) </span><span style="color:#6A737D;">// 添加数据进去</span></span>
<span class="line"><span style="color:#E1E4E8;">  .</span><span style="color:#B392F0;">write</span><span style="color:#E1E4E8;">() </span><span style="color:#6A737D;">// 写入lowdb</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 获取数据 </span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(db.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;posts&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 删除数据</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> res1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> db.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;posts&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">({id:</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">}).</span><span style="color:#B392F0;">write</span><span style="color:#E1E4E8;">() </span><span style="color:#6A737D;">// remove() 传输删除的条件</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(res1) </span><span style="color:#6A737D;">// 返回被删除的元素</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 获取单条数据</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> res2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> db.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;posts&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">({id:</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">}).</span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(res2)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 更新数据</span></span>
<span class="line"><span style="color:#6A737D;">// 先获取，才能更新</span></span>
<span class="line"><span style="color:#E1E4E8;">db.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;posts&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">({id:</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">}).</span><span style="color:#B392F0;">assign</span><span style="color:#E1E4E8;">({title:</span><span style="color:#9ECBFF;">&#39;hello world!&#39;</span><span style="color:#E1E4E8;">}).</span><span style="color:#B392F0;">write</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 以1.0.0版本为例</span></span>
<span class="line"><span style="color:#6A737D;">// lowdb</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">low</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;lowdb&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">// 读写适配器，用来读写json文件 </span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">FileSync</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;lowdb/adapters/FileSync&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 参数一是json文件地址，参数二是一个可选的配置对象 https://www.npmjs.com/package/lowdb/v/1.0.0</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">adapter</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FileSync</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;db.json&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">// 创建一个lodash chain，拥有一些属性和方法，用来操作数据库</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">low</span><span style="color:#24292E;">(adapter)</span></span>
<span class="line"><span style="color:#6A737D;">// 初始化数据 defaults()设置默认值 write()将这些初始值写入lowdb</span></span>
<span class="line"><span style="color:#24292E;">db.</span><span style="color:#6F42C1;">defaults</span><span style="color:#24292E;">({ posts: [], user: {} }).</span><span style="color:#6F42C1;">write</span><span style="color:#24292E;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 写入数据</span></span>
<span class="line"><span style="color:#24292E;">db.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;posts&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 获取posts数据</span></span>
<span class="line"><span style="color:#24292E;">  .</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">({ id: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, title: </span><span style="color:#032F62;">&#39;lowdb is awesome&#39;</span><span style="color:#24292E;">}) </span><span style="color:#6A737D;">// 添加数据进去</span></span>
<span class="line"><span style="color:#24292E;">  .</span><span style="color:#6F42C1;">write</span><span style="color:#24292E;">() </span><span style="color:#6A737D;">// 写入lowdb</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 获取数据 </span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(db.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;posts&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 删除数据</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> res1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> db.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;posts&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">({id:</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">}).</span><span style="color:#6F42C1;">write</span><span style="color:#24292E;">() </span><span style="color:#6A737D;">// remove() 传输删除的条件</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(res1) </span><span style="color:#6A737D;">// 返回被删除的元素</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 获取单条数据</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> res2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> db.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;posts&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">({id:</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">}).</span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(res2)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 更新数据</span></span>
<span class="line"><span style="color:#6A737D;">// 先获取，才能更新</span></span>
<span class="line"><span style="color:#24292E;">db.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;posts&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">({id:</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">}).</span><span style="color:#6F42C1;">assign</span><span style="color:#24292E;">({title:</span><span style="color:#032F62;">&#39;hello world!&#39;</span><span style="color:#24292E;">}).</span><span style="color:#6F42C1;">write</span><span style="color:#24292E;">()</span></span></code></pre></div>`,7),e=[o];function c(t,r,y,E,i,F){return n(),a("div",null,e)}const w=s(p,[["render",c]]);export{C as __pageData,w as default};
