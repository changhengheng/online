import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.19358895.js";const m=JSON.parse('{"title":"命名动态导入模块","description":"","frontmatter":{},"headers":[],"relativePath":"program/frontend/webpack/chapter2/42.命名动态导入模块.md","filePath":"program/frontend/webpack/chapter2/42.命名动态导入模块.md","lastUpdated":1694563493000}'),p={name:"program/frontend/webpack/chapter2/42.命名动态导入模块.md"},o=l(`<h1 id="命名动态导入模块" tabindex="-1">命名动态导入模块 <a class="header-anchor" href="#命名动态导入模块" aria-label="Permalink to &quot;命名动态导入模块&quot;">​</a></h1><ol><li><p>魔法命名</p><ul><li><p>main.js</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> sum </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./js/sum&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 引入资源，Webpack才会对其打包</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./css/iconfont.css&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./css/index.css&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./less/index.less&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./sass/index.sass&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./sass/index.scss&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./styl/index.styl&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">result2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sum</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(result2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 以下代码生产模式下会删除</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.hot) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.hot.</span><span style="color:#B392F0;">accept</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./js/sum.js&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">sum</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">result2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sum</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(result2);</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;btn&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">onClick</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// eslint会对动态导入语法报错，需要修改eslint配置文件</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// webpackChunkName: &quot;math&quot;：这是webpack动态导入模块命名的方式（webpack固定语法，也叫魔法命名，通过注释的方式命名）</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// &quot;math&quot;将来就会作为[name]的值显示。</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">import</span><span style="color:#E1E4E8;">( </span><span style="color:#6A737D;">/* webpackChunkName: &quot;math&quot; */</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./js/math.js&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(({</span></span>
<span class="line"><span style="color:#E1E4E8;">        count</span></span>
<span class="line"><span style="color:#E1E4E8;">    }) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">count</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> sum </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./js/sum&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 引入资源，Webpack才会对其打包</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./css/iconfont.css&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./css/index.css&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./less/index.less&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./sass/index.sass&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./sass/index.scss&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./styl/index.styl&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">result2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sum</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(result2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 以下代码生产模式下会删除</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">module</span><span style="color:#24292E;">.hot) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">module</span><span style="color:#24292E;">.hot.</span><span style="color:#6F42C1;">accept</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;./js/sum.js&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">sum</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">result2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sum</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(result2);</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;btn&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">onClick</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// eslint会对动态导入语法报错，需要修改eslint配置文件</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// webpackChunkName: &quot;math&quot;：这是webpack动态导入模块命名的方式（webpack固定语法，也叫魔法命名，通过注释的方式命名）</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// &quot;math&quot;将来就会作为[name]的值显示。</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">import</span><span style="color:#24292E;">( </span><span style="color:#6A737D;">/* webpackChunkName: &quot;math&quot; */</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./js/math.js&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(({</span></span>
<span class="line"><span style="color:#24292E;">        count</span></span>
<span class="line"><span style="color:#24292E;">    }) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">count</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><blockquote><p>给import动态导入的模块命名需要做两件事：</p><ol><li>使用webpackChunkName魔法命名</li><li>在output配置chunkFilename：webpack打包输出的其他文件（不是入口文件）如何命名</li></ol></blockquote></li></ul></li><li><p>指定动态导入资源命名方式</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// webpack配置文件</span></span>
<span class="line"><span style="color:#B392F0;">output</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;">: path.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(__dirname, </span><span style="color:#9ECBFF;">&quot;../dist&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#6A737D;">// 生产模式需要输出</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">filename</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;static/js/[name].js&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 入口文件打包输出资源命名方式</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">chunkFilename</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;static/js/[name].chunk.js&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 动态导入输出资源命名方式，这里的name取的就是webpack魔法命名的值</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">assetModuleFilename</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;static/media/[name].[hash][ext]&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 图片、字体等资源命名方式（注意用hash）</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">clean</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">},</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// webpack配置文件</span></span>
<span class="line"><span style="color:#6F42C1;">output</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">path</span><span style="color:#24292E;">: path.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(__dirname, </span><span style="color:#032F62;">&quot;../dist&quot;</span><span style="color:#24292E;">), </span><span style="color:#6A737D;">// 生产模式需要输出</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">filename</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;static/js/[name].js&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 入口文件打包输出资源命名方式</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">chunkFilename</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;static/js/[name].chunk.js&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 动态导入输出资源命名方式，这里的name取的就是webpack魔法命名的值</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">assetModuleFilename</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;static/media/[name].[hash][ext]&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 图片、字体等资源命名方式（注意用hash）</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">clean</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">},</span></span></code></pre></div></li></ol>`,2),e=[o];function t(c,r,E,y,i,u){return n(),a("div",null,e)}const C=s(p,[["render",t]]);export{m as __pageData,C as default};
