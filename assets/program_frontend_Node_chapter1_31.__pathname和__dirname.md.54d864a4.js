import{_ as a,o as e,c as n,Q as s}from"./chunks/framework.419948d5.js";const f=JSON.parse('{"title":"__dirname和__pathname","description":"","frontmatter":{},"headers":[],"relativePath":"program/frontend/Node/chapter1/31.__pathname和__dirname.md","filePath":"program/frontend/Node/chapter1/31.__pathname和__dirname.md","lastUpdated":1697287289000}'),o={name:"program/frontend/Node/chapter1/31.__pathname和__dirname.md"},t=s('<h1 id="dirname和-pathname" tabindex="-1"><code>__dirname</code>和<code>__pathname</code> <a class="header-anchor" href="#dirname和-pathname" aria-label="Permalink to &quot;`__dirname`和`__pathname`&quot;">​</a></h1><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(__filename); </span><span style="color:#6A737D;">// __filename是一个“全局变量”，但不是真正意义上的全部变量，本质上只在当前模块内全局可用。它保存了文件的绝对路径：盘符：目录+文件名+文件扩展名</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(__dirname); </span><span style="color:#6A737D;">// __dirname获取当前目录的绝对路径，性质和__filename一样，也是一个“全局变量”</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(__filename); </span><span style="color:#6A737D;">// __filename是一个“全局变量”，但不是真正意义上的全部变量，本质上只在当前模块内全局可用。它保存了文件的绝对路径：盘符：目录+文件名+文件扩展名</span></span>\n<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(__dirname); </span><span style="color:#6A737D;">// __dirname获取当前目录的绝对路径，性质和__filename一样，也是一个“全局变量”</span></span></code></pre></div>',2),p=[t];function l(_,r,c,d,i,m){return e(),n("div",null,p)}const y=a(o,[["render",l]]);export{f as __pageData,y as default};
