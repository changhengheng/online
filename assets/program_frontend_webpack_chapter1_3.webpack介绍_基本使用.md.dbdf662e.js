import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.419948d5.js";const h=JSON.parse('{"title":"webpack介绍&基本使用","description":"","frontmatter":{},"headers":[],"relativePath":"program/frontend/webpack/chapter1/3.webpack介绍&基本使用.md","filePath":"program/frontend/webpack/chapter1/3.webpack介绍&基本使用.md","lastUpdated":1694391214000}'),o={name:"program/frontend/webpack/chapter1/3.webpack介绍&基本使用.md"},l=p(`<h1 id="webpack介绍-基本使用" tabindex="-1">webpack介绍&amp;基本使用 <a class="header-anchor" href="#webpack介绍-基本使用" aria-label="Permalink to &quot;webpack介绍&amp;基本使用&quot;">​</a></h1><h2 id="基本使用" tabindex="-1">基本使用 <a class="header-anchor" href="#基本使用" aria-label="Permalink to &quot;基本使用&quot;">​</a></h2><p>Webpack 是一个静态资源打包工具。</p><p>它会以一个或多个文件作为打包的入口，将我们整个项目所有文件编译组合成一个或多个文件输出出去。</p><p>输出的文件就是编译好的文件，就可以在浏览器段运行了。</p><p>我们将 Webpack 输出的文件叫做 bundle</p><blockquote><p>对<strong>打包</strong> 这个概念的理解</p></blockquote><h2 id="功能介绍" tabindex="-1">功能介绍 <a class="header-anchor" href="#功能介绍" aria-label="Permalink to &quot;功能介绍&quot;">​</a></h2><p>Webpack 本身功能是有限的:</p><ul><li>开发模式：仅能编译 JS 中的 <code>ESM</code> 语法</li><li>生产模式：能编译 JS 中的 <code>ESM</code> 语法，还能压缩 JS 代码</li></ul><blockquote><p>Webpack 本身只能处理 JavaScript 模块，如果要处理其他类型的文件，就需要使用 loader 进行转换。 webpack本身，在开发模式下仅能编辑ESM语法，不能编译其他的比如css等语法；在生产模式下可以编译ESM语法，也可以压缩代码，（观察两种打包方式下最终生成的main.js的变化）</p></blockquote><h2 id="开始使用" tabindex="-1">开始使用 <a class="header-anchor" href="#开始使用" aria-label="Permalink to &quot;开始使用&quot;">​</a></h2><h3 id="_1-资源目录" tabindex="-1">1. 资源目录 <a class="header-anchor" href="#_1-资源目录" aria-label="Permalink to &quot;1. 资源目录&quot;">​</a></h3><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">webpack_code # 项目根目录（所有指令必须在这个目录运行）</span></span>
<span class="line"><span style="color:#e1e4e8;">    └── src # 项目源码目录</span></span>
<span class="line"><span style="color:#e1e4e8;">        ├── js # js文件目录</span></span>
<span class="line"><span style="color:#e1e4e8;">        │   ├── count.js</span></span>
<span class="line"><span style="color:#e1e4e8;">        │   └── sum.js</span></span>
<span class="line"><span style="color:#e1e4e8;">        └── main.js # 项目主文件</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">webpack_code # 项目根目录（所有指令必须在这个目录运行）</span></span>
<span class="line"><span style="color:#24292e;">    └── src # 项目源码目录</span></span>
<span class="line"><span style="color:#24292e;">        ├── js # js文件目录</span></span>
<span class="line"><span style="color:#24292e;">        │   ├── count.js</span></span>
<span class="line"><span style="color:#24292e;">        │   └── sum.js</span></span>
<span class="line"><span style="color:#24292e;">        └── main.js # 项目主文件</span></span></code></pre></div><h3 id="_2-创建文件" tabindex="-1">2. 创建文件 <a class="header-anchor" href="#_2-创建文件" aria-label="Permalink to &quot;2. 创建文件&quot;">​</a></h3><ul><li>count.js</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">count</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">y</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> x </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> y;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">count</span><span style="color:#24292E;">(</span><span style="color:#E36209;">x</span><span style="color:#24292E;">, </span><span style="color:#E36209;">y</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> x </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> y;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>sum.js</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sum</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">...</span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> args.</span><span style="color:#B392F0;">reduce</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">p</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">c</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> p </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> c, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sum</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">...</span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> args.</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">((</span><span style="color:#E36209;">p</span><span style="color:#24292E;">, </span><span style="color:#E36209;">c</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> p </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> c, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>main.js</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 打包的入口文件，也叫主文件，入口可以配置多个，暂时只使用一个</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> count </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./js/count&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> sum </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./js/sum&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">count</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">sum</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 打包的入口文件，也叫主文件，入口可以配置多个，暂时只使用一个</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> count </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./js/count&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> sum </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./js/sum&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">count</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">sum</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">));</span></span></code></pre></div><h3 id="_3-下载依赖" tabindex="-1">3. 下载依赖 <a class="header-anchor" href="#_3-下载依赖" aria-label="Permalink to &quot;3. 下载依赖&quot;">​</a></h3><blockquote><p>使用webpack</p></blockquote><p>打开终端，来到项目根目录。运行以下指令：</p><ul><li>初始化<code>package.json</code></li></ul><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">npm init -y</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">npm init -y</span></span></code></pre></div><p>此时会生成一个基础的 <code>package.json</code> 文件。</p><p><strong>需要注意的是 <code>package.json</code> 中 <code>name</code> 字段不能叫做 <code>webpack</code> , 否则下一步会报错</strong></p><ul><li>下载依赖</li></ul><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">npm i webpack webpack-cli -D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">npm i webpack webpack-cli -D</span></span></code></pre></div><blockquote><p>webpack-cli 提供了webpack指令，可以使用npx来执行</p></blockquote><h3 id="_4-启用-webpack" tabindex="-1">4. 启用 Webpack <a class="header-anchor" href="#_4-启用-webpack" aria-label="Permalink to &quot;4. 启用 Webpack&quot;">​</a></h3><blockquote><p>npx会将node_modules的.bin目录临时添加为环境变量，这样就可以访问其中的应用程序</p></blockquote><ul><li>开发模式</li></ul><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">npx webpack ./src/main.js --mode=development</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">npx webpack ./src/main.js --mode=development</span></span></code></pre></div><blockquote><p>npx webpack 运行weboack应用程序的指令，后面的地址用来指定打包的入口文件路径</p></blockquote><ul><li>生产模式</li></ul><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">npx webpack ./src/main.js --mode=production</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">npx webpack ./src/main.js --mode=production</span></span></code></pre></div><p><code>npx webpack</code> : 是用来运行本地安装 <code>Webpack</code> 包的。</p><p><code>./src/main.js</code> : 指定 <code>Webpack</code> 从 <code>main.js</code> 文件开始打包，不但会打包 <code>main.js</code> ，还会将其依赖也一起打包进来。</p><p><code>--mode=xxx</code> ：指定模式（环境）。</p><h3 id="_5-观察输出文件" tabindex="-1">5. 观察输出文件 <a class="header-anchor" href="#_5-观察输出文件" aria-label="Permalink to &quot;5. 观察输出文件&quot;">​</a></h3><p>默认 <code>Webpack</code> 会将文件打包输出到 <code>dist</code> 目录下，我们查看 <code>dist</code> 目录下文件情况就好了</p><h2 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h2><p><code>Webpack</code> 本身功能比较少，只能处理 <code>js</code> 资源，一旦遇到 <code>css</code> 等其他资源就会报错。</p><p>所以我们学习 <code>Webpack</code> ，就是主要学习如何处理其他资源。</p>`,46),e=[l];function c(t,r,i,d,y,E){return a(),n("div",null,e)}const b=s(o,[["render",c]]);export{h as __pageData,b as default};
