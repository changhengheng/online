import{_ as a,o as e,c as l,Q as s}from"./chunks/framework.419948d5.js";const x=JSON.parse('{"title":"响应报文结构","description":"","frontmatter":{},"headers":[],"relativePath":"program/frontend/Node/chapter1/37.响应报文结构.md","filePath":"program/frontend/Node/chapter1/37.响应报文结构.md","lastUpdated":1697287289000}'),o={name:"program/frontend/Node/chapter1/37.响应报文结构.md"},t=s('<h1 id="响应报文结构" tabindex="-1">响应报文结构 <a class="header-anchor" href="#响应报文结构" aria-label="Permalink to &quot;响应报文结构&quot;">​</a></h1><p>响应报文组成结构与请求报文类似：响应首行、响应头、响应空行、响应体</p><h2 id="响应首行" tabindex="-1">响应首行 <a class="header-anchor" href="#响应首行" aria-label="Permalink to &quot;响应首行&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">HTTP</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">1.1</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">OK</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">HTTP</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">1.1</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">200</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">OK</span></span></code></pre></div><p>响应首行组成：HTTP版本号、响应状态码、响应状态的描述。</p><h3 id="状态码" tabindex="-1">状态码 <a class="header-anchor" href="#状态码" aria-label="Permalink to &quot;状态码&quot;">​</a></h3><p>状态码表明请求是成功或失败。常见的状态码是：</p><ul><li>200 请求成功</li><li>403 禁止请求</li><li>404 找不到资源</li><li>500 服务器内部错误</li></ul><p>HTTP协议对状态码的分类：</p><ul><li>1xx 信息响应</li><li>2xx 成功响应</li><li>3xx 重定向消息</li><li>4xx 客户端错误响应</li><li>5xx 服务端错误响应</li></ul><h3 id="响应状态描述" tabindex="-1">响应状态描述 <a class="header-anchor" href="#响应状态描述" aria-label="Permalink to &quot;响应状态描述&quot;">​</a></h3><p>状态文本（status text）。一个简短的，纯粹的信息，通过状态码的文本描述，帮助人们理解该 HTTP 消息。通常情况下都是和状态码一一对应的，比如：</p><ul><li>200 OK</li><li>403 Forbidden</li><li>404 Not Found</li><li>500 Internal Server Error</li></ul><blockquote><p>遇到陌生状态码查MDN就行了</p></blockquote>',14),n=[t];function r(p,i,c,d,h,_){return e(),l("div",null,n)}const m=a(o,[["render",r]]);export{x as __pageData,m as default};
