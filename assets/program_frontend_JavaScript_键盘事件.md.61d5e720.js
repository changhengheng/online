import{_ as e,o as a,c as t,Q as o}from"./chunks/framework.19358895.js";const b=JSON.parse('{"title":"键盘事件","description":"","frontmatter":{},"headers":[],"relativePath":"program/frontend/JavaScript/键盘事件.md","filePath":"program/frontend/JavaScript/键盘事件.md","lastUpdated":1695205095000}'),n={name:"program/frontend/JavaScript/键盘事件.md"},r=o('<h1 id="键盘事件" tabindex="-1">键盘事件 <a class="header-anchor" href="#键盘事件" aria-label="Permalink to &quot;键盘事件&quot;">​</a></h1><p>键盘事件由用户击打键盘触发，主要有 keydown、keypress、keyup 三个事件，它们都继承了 KeyboardEvent 接口。</p><ul><li>keydown：按下键盘时触发。</li><li>keypress：按下有值的键时触发，即按下 Ctrl、Alt、Shift、Meta 这样无值的键，这个事件不会触发。对于有值的键，按下时先触发 keydown 事件，再触发这个事件。</li><li>keyup：松开键盘时触发该事件。</li></ul><p>如果用户一直按键不松开，就会连续触发键盘事件，触发的顺序如下。</p><ul><li>keydown</li><li>keypress</li><li>keydown</li><li>keypress</li><li>...（重复以上过程）</li><li>keyup</li></ul><h2 id="keyboardevent-接口概述" tabindex="-1">KeyboardEvent 接口概述 <a class="header-anchor" href="#keyboardevent-接口概述" aria-label="Permalink to &quot;KeyboardEvent 接口概述&quot;">​</a></h2><p>KeyboardEvent 接口用来描述用户与键盘的互动。</p><p>浏览器原生提供 KeyboardEvent 构造函数，用来新建键盘事件的实例。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">KeyboardEvent</span><span style="color:#E1E4E8;">(type, options);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">KeyboardEvent</span><span style="color:#24292E;">(type, options);</span></span></code></pre></div><h2 id="keyboardevent-的实例属性" tabindex="-1">KeyboardEvent 的实例属性 <a class="header-anchor" href="#keyboardevent-的实例属性" aria-label="Permalink to &quot;KeyboardEvent 的实例属性&quot;">​</a></h2><h3 id="keyboardevent-key" tabindex="-1">KeyboardEvent.key <a class="header-anchor" href="#keyboardevent-key" aria-label="Permalink to &quot;KeyboardEvent.key&quot;">​</a></h3><p>KeyboardEvent.key 属性返回一个字符串，表示按下的键名。该属性只读。</p><p>如果按下的键代表可打印字符，则返回这个字符，比如数字、字母。</p><p>如果按下的键代表不可打印的特殊字符，则返回预定义的键值，比如 Backspace，Tab，Enter，Shift，Control，Alt，CapsLock，Esc，Spacebar，PageUp，PageDown，End，Home，Left，Right，Up，Down，PrintScreen，Insert，Del，Win，F1 ～ F12，NumLock，Scroll 等。</p><p>如果同时按下一个控制键和一个符号键，则返回符号键的键名。比如，按下 Ctrl + a，则返回 a；按下 Shift + a，则返回大写的 A。</p><p>如果无法识别键名，返回字符串 Unidentified。</p>',16),s=[r];function l(p,i,d,c,y,h){return a(),t("div",null,s)}const _=e(n,[["render",l]]);export{b as __pageData,_ as default};
