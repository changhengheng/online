import{_ as s,o as n,c as a,Q as p}from"./chunks/framework.19358895.js";const F=JSON.parse('{"title":"Eslint 使用","description":"","frontmatter":{},"headers":[],"relativePath":"program/frontend/webpack/chapter1/18.Eslint使用.md","filePath":"program/frontend/webpack/chapter1/18.Eslint使用.md","lastUpdated":1694391214000}'),l={name:"program/frontend/webpack/chapter1/18.Eslint使用.md"},o=p(`<h1 id="eslint-使用" tabindex="-1">Eslint 使用 <a class="header-anchor" href="#eslint-使用" aria-label="Permalink to &quot;Eslint 使用&quot;">​</a></h1><blockquote><p>Eslint在webpack4是一个loader，webpack5是一个plugin</p></blockquote><blockquote><p>webpack中，plugin 使用和 loader 不一样：loader可以直接配置使用，所有的plugin都需要引入才能使用；所有的plugin都是构造函数，都是通过new去调用的。</p></blockquote><h2 id="_1-在-webpack-中使用" tabindex="-1">1. 在 Webpack 中使用 <a class="header-anchor" href="#_1-在-webpack-中使用" aria-label="Permalink to &quot;1. 在 Webpack 中使用&quot;">​</a></h2><blockquote><p>查webpack官网</p></blockquote><ol><li><p>下载包</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">i</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">eslint-webpack-plugin</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">eslint</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eslint-webpack-plugin</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eslint</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre></div></li><li><p>定义 Eslint 配置文件：<code>.eslintrc.js</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 继承 Eslint 规则</span></span>
<span class="line"><span style="color:#E1E4E8;">    extends: [</span><span style="color:#9ECBFF;">&quot;eslint:recommended&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    env: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        node: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 启用node中全局变量</span></span>
<span class="line"><span style="color:#E1E4E8;">        browser: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 启用浏览器中全局变量</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    parserOptions: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        ecmaVersion: </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 语法环境是ES6</span></span>
<span class="line"><span style="color:#E1E4E8;">        sourceType: </span><span style="color:#9ECBFF;">&quot;module&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#6A737D;">// 模块化是ESM</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    rules: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;no-var&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 不能使用 var 定义变量</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 继承 Eslint 规则</span></span>
<span class="line"><span style="color:#24292E;">    extends: [</span><span style="color:#032F62;">&quot;eslint:recommended&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    env: {</span></span>
<span class="line"><span style="color:#24292E;">        node: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 启用node中全局变量</span></span>
<span class="line"><span style="color:#24292E;">        browser: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 启用浏览器中全局变量</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    parserOptions: {</span></span>
<span class="line"><span style="color:#24292E;">        ecmaVersion: </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 语法环境是ES6</span></span>
<span class="line"><span style="color:#24292E;">        sourceType: </span><span style="color:#032F62;">&quot;module&quot;</span><span style="color:#24292E;">,</span><span style="color:#6A737D;">// 模块化是ESM</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    rules: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;no-var&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 不能使用 var 定义变量</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><blockquote><p>启用全局变量的意思是能不能直接用node或者浏览器环境中的全局变量，比如window、console.log等等</p></blockquote></li><li><p>配置 <code>webpack.config.js</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;path&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ESLintWebpackPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;eslint-webpack-plugin&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// ……</span></span>
<span class="line"><span style="color:#E1E4E8;">    plugins: [</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ESLintWebpackPlugin</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// context指定要检查的文件的根目录</span></span>
<span class="line"><span style="color:#E1E4E8;">            context: path.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(__dirname, </span><span style="color:#9ECBFF;">&quot;src&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">        }),</span></span>
<span class="line"><span style="color:#E1E4E8;">    ],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ……</span></span>
<span class="line"><span style="color:#E1E4E8;">    mode: </span><span style="color:#9ECBFF;">&quot;development&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;path&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ESLintWebpackPlugin</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;eslint-webpack-plugin&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// ……</span></span>
<span class="line"><span style="color:#24292E;">    plugins: [</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ESLintWebpackPlugin</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// context指定要检查的文件的根目录</span></span>
<span class="line"><span style="color:#24292E;">            context: path.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(__dirname, </span><span style="color:#032F62;">&quot;src&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">        }),</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ……</span></span>
<span class="line"><span style="color:#24292E;">    mode: </span><span style="color:#032F62;">&quot;development&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div></li><li><p>运行指令</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npx webpack</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npx webpack</span></span></code></pre></div><blockquote><p>正常情况下如果语法有问题，编译之后才能看到eslint的报错，如果使用了vscode 的 eslint插件，代码写完就会报错</p></blockquote></li></ol><p>在控制台查看 Eslint 检查效果</p><h2 id="_2-vscode-eslint-插件" tabindex="-1">2. VSCode Eslint 插件 <a class="header-anchor" href="#_2-vscode-eslint-插件" aria-label="Permalink to &quot;2. VSCode Eslint 插件&quot;">​</a></h2><p>打开 VSCode，下载 Eslint 插件，即可不用编译就能看到错误，可以提前解决</p><p>但是此时就会对项目所有文件默认进行 Eslint 检查了，我们 dist 目录下的打包后文件就会报错。但是我们只需要检查 src 下面的文件，不需要检查 dist 下面的文件。</p><p>所以可以使用 Eslint 忽略文件解决。在项目根目录新建<code>.eslintignore</code>文件：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"># 忽略dist目录下所有文件</span></span>
<span class="line"><span style="color:#e1e4e8;">dist</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"># 忽略dist目录下所有文件</span></span>
<span class="line"><span style="color:#24292e;">dist</span></span></code></pre></div>`,12),e=[o];function t(c,r,E,i,y,d){return n(),a("div",null,e)}const h=s(l,[["render",t]]);export{F as __pageData,h as default};
