import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.419948d5.js";const d=JSON.parse('{"title":"HMR 提升打包构建速度","description":"","frontmatter":{},"headers":[],"relativePath":"program/frontend/webpack/chapter2/32.HMR提升打包构建速度.md","filePath":"program/frontend/webpack/chapter2/32.HMR提升打包构建速度.md","lastUpdated":1694391214000}'),p={name:"program/frontend/webpack/chapter2/32.HMR提升打包构建速度.md"},o=l(`<h1 id="hmr-提升打包构建速度" tabindex="-1">HMR 提升打包构建速度 <a class="header-anchor" href="#hmr-提升打包构建速度" aria-label="Permalink to &quot;HMR 提升打包构建速度&quot;">​</a></h1><p>HMR 是 HotModuleReplacement 的缩写，中文一般称为热更新</p><h2 id="为什么" tabindex="-1">为什么 <a class="header-anchor" href="#为什么" aria-label="Permalink to &quot;为什么&quot;">​</a></h2><p>开发时我们修改了其中一个模块代码，Webpack 默认会将所有模块全部重新打包编译，速度很慢。</p><p>所以我们需要做到修改某个模块代码，就只有这个模块代码需要重新打包编译，其他模块使用缓存，这样打包速度就能很快。</p><h2 id="是什么" tabindex="-1">是什么 <a class="header-anchor" href="#是什么" aria-label="Permalink to &quot;是什么&quot;">​</a></h2><p>HotModuleReplacement（HMR / 热模块替换）：在程序运行中，替换、添加或删除模块，而无需重新加载整个页面。</p><h2 id="怎么用" tabindex="-1">怎么用 <a class="header-anchor" href="#怎么用" aria-label="Permalink to &quot;怎么用&quot;">​</a></h2><blockquote><p>webpack5 中 HMR 默认开启，webpack4 中不是 hot 用于配置 HMR，该配置项位于 devServer 中，仅开发模式可用；生产模式下重新打包就是得重新打包，没法进行HMR。 如果不配置 HMR，代码发生变化时，webpack 会重新编译打包所有的文件，可以看到页面被刷新的效果；配置了 HMR 时，只会做局部更新发生变化的模块，不会刷新页面；</p></blockquote><ol><li>基本配置</li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 其他省略</span></span>
<span class="line"><span style="color:#E1E4E8;">        devServer: {</span></span>
<span class="line"><span style="color:#E1E4E8;">            host: </span><span style="color:#9ECBFF;">&quot;localhost&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 启动服务器域名</span></span>
<span class="line"><span style="color:#E1E4E8;">            port: </span><span style="color:#9ECBFF;">&quot;3000&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 启动服务器端口号</span></span>
<span class="line"><span style="color:#E1E4E8;">            open: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 是否自动打开浏览器</span></span>
<span class="line"><span style="color:#E1E4E8;">            hot: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 开启 HMR 功能（只能用于开发环境，生产环境不需要了）</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">    };</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 其他省略</span></span>
<span class="line"><span style="color:#24292E;">        devServer: {</span></span>
<span class="line"><span style="color:#24292E;">            host: </span><span style="color:#032F62;">&quot;localhost&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 启动服务器域名</span></span>
<span class="line"><span style="color:#24292E;">            port: </span><span style="color:#032F62;">&quot;3000&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 启动服务器端口号</span></span>
<span class="line"><span style="color:#24292E;">            open: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 是否自动打开浏览器</span></span>
<span class="line"><span style="color:#24292E;">            hot: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 开启 HMR 功能（只能用于开发环境，生产环境不需要了）</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">    };</span></span></code></pre></div><pre><code>此时 css 样式经过 style-loader 处理，已经具备 HMR 功能了。 但是 js 还不行。
</code></pre><ol start="2"><li>JS 配置</li></ol><blockquote><p>样式天然具备 HMR 的功能，这是因为我们使用了 style-loader；而 js 则不具备 HMR 的功能，js 配置 HMR 需要使用下面的代码：</p></blockquote><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// main.js</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> count </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./js/count&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> sum </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./js/sum&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 引入资源，Webpack 才会对其打包</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./css/iconfont.css&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./css/index.css&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./less/index.less&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./sass/index.sass&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./sass/index.scss&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./styl/index.styl&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">result1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">count</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(result1);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">result2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sum</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(result2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 判断是否支持 HMR 功能（有些低版本浏览器不支持）</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.hot) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 接收 count.js 模块，如果该模块发生变化，就只更新该模块</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.hot.</span><span style="color:#B392F0;">accept</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./js/count.js&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.hot.</span><span style="color:#B392F0;">accept</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./js/sum.js&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 可以定义一个回调函数，当该模块发生变化时被调用</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// module.hot.accept(&quot;./js/count.js&quot;, function (count) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//     const result1 = count(2, 1);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//     console.log(result1);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// });</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// module.hot.accept(&quot;./js/sum.js&quot;, function (sum) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//     const result2 = sum(1, 2, 3, 4);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//     console.log(result2);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// });</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// main.js</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> count </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./js/count&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> sum </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./js/sum&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 引入资源，Webpack 才会对其打包</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./css/iconfont.css&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./css/index.css&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./less/index.less&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./sass/index.sass&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./sass/index.scss&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./styl/index.styl&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">result1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">count</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(result1);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">result2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sum</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(result2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 判断是否支持 HMR 功能（有些低版本浏览器不支持）</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">module</span><span style="color:#24292E;">.hot) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 接收 count.js 模块，如果该模块发生变化，就只更新该模块</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">module</span><span style="color:#24292E;">.hot.</span><span style="color:#6F42C1;">accept</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;./js/count.js&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">module</span><span style="color:#24292E;">.hot.</span><span style="color:#6F42C1;">accept</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;./js/sum.js&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 可以定义一个回调函数，当该模块发生变化时被调用</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// module.hot.accept(&quot;./js/count.js&quot;, function (count) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//     const result1 = count(2, 1);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//     console.log(result1);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// });</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// module.hot.accept(&quot;./js/sum.js&quot;, function (sum) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//     const result2 = sum(1, 2, 3, 4);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//     console.log(result2);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// });</span></span>
<span class="line"><span style="color:#24292E;">       </span></span>
<span class="line"><span style="color:#24292E;">    }</span></span></code></pre></div><p>上面这样写会很麻烦，所以实际开发我们会使用其他 loader 来解决。</p><p>比如：<a href="https://github.com/vuejs/vue-loader" target="_blank" rel="noreferrer">vue-loader</a>, <a href="https://github.com/gaearon/react-hot-loader" target="_blank" rel="noreferrer">react-hot-loader</a></p><blockquote><p>开发 Vue 项目使用 vue-loader，开发 react 项目使用 react-hot-loader。后续课程搭建项目脚手架时会用到。</p></blockquote>`,18),e=[o];function t(c,r,E,y,i,u){return n(),a("div",null,e)}const m=s(p,[["render",t]]);export{d as __pageData,m as default};
