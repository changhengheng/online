import{_ as s,o as a,c as p,Q as n}from"./chunks/framework.419948d5.js";const _=JSON.parse('{"title":"项目目录分析","description":"","frontmatter":{},"headers":[],"relativePath":"program/frontend/Vue/Vue3/0.起步/3.项目目录分析.md","filePath":"program/frontend/Vue/Vue3/0.起步/3.项目目录分析.md","lastUpdated":1694412824000}'),o={name:"program/frontend/Vue/Vue3/0.起步/3.项目目录分析.md"},e=n(`<h1 id="项目目录分析" tabindex="-1">项目目录分析 <a class="header-anchor" href="#项目目录分析" aria-label="Permalink to &quot;项目目录分析&quot;">​</a></h1><p>src/main.ts：项目的入口文件</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 程序的主入口文件,ts文件,是main.ts</span></span>
<span class="line"><span style="color:#6A737D;">// 引入createApp函数,创建对应的应用,产生应用的实例对象</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createApp } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 引入App组件(所有组件的父级组件)</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> App </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./App.vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 创建App应用返回对应的实例对象,调用mount方法进行挂载</span></span>
<span class="line"><span style="color:#B392F0;">createApp</span><span style="color:#E1E4E8;">(App).</span><span style="color:#B392F0;">mount</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;#app&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 程序的主入口文件,ts文件,是main.ts</span></span>
<span class="line"><span style="color:#6A737D;">// 引入createApp函数,创建对应的应用,产生应用的实例对象</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createApp } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 引入App组件(所有组件的父级组件)</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> App </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./App.vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 创建App应用返回对应的实例对象,调用mount方法进行挂载</span></span>
<span class="line"><span style="color:#6F42C1;">createApp</span><span style="color:#24292E;">(App).</span><span style="color:#6F42C1;">mount</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;#app&quot;</span><span style="color:#24292E;">);</span></span></code></pre></div><p>src/App.vue</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">vue2的html模板必须要有一对根标签，vue3组件的html中可以没有根标签</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">vue2的html模板必须要有一对根标签，vue3组件的html中可以没有根标签</span></span></code></pre></div>`,5),l=[e];function t(c,r,i,y,u,d){return a(),p("div",null,l)}const m=s(o,[["render",t]]);export{_ as __pageData,m as default};
