import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.19358895.js";const _=JSON.parse('{"title":"判断响应式数据是怎样创建的","description":"","frontmatter":{},"headers":[],"relativePath":"program/frontend/Vue/Vue3/1.组合API/20.判断响应式数据是怎样创建的.md","filePath":"program/frontend/Vue/Vue3/1.组合API/20.判断响应式数据是怎样创建的.md","lastUpdated":1694412824000}'),p={name:"program/frontend/Vue/Vue3/1.组合API/20.判断响应式数据是怎样创建的.md"},o=l(`<h1 id="判断响应式数据是怎样创建的" tabindex="-1">判断响应式数据是怎样创建的 <a class="header-anchor" href="#判断响应式数据是怎样创建的" aria-label="Permalink to &quot;判断响应式数据是怎样创建的&quot;">​</a></h1><p>isRef: 检查一个值是否为一个 ref 对象 isReactive: 检查一个对象是否是由 reactive 创建的响应式代理 isReadonly: 检查一个对象是否是由 readonly 创建的只读代理 isProxy: 检查一个对象是否是由 reactive 或者 readonly 方法创建的代理</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">h2</span><span style="color:#E1E4E8;">&gt;响应式数据的判断&lt;/</span><span style="color:#85E89D;">h2</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lang</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;ts&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { defineComponent, isProxy, isReactive, isReadonly, isRef, reactive, readonly, ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">defineComponent</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  name:</span><span style="color:#9ECBFF;">&#39;App&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// isRef: 检查一个值是否为一个 ref 对象</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// isReactive: 检查一个对象是否是由 reactive 创建的响应式代理</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// isReadonly: 检查一个对象是否是由 readonly 创建的只读代理</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// isProxy: 检查一个对象是否是由 reactive 或者 readonly 方法创建的代理</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">setup</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// isRef: 检查一个值是否为一个 ref 对象</span></span>
<span class="line"><span style="color:#E1E4E8;">      console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">isRef</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">({})))</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// isReactive: 检查一个对象是否是由 reactive 创建的响应式代理</span></span>
<span class="line"><span style="color:#E1E4E8;">      console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">isReactive</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">reactive</span><span style="color:#E1E4E8;">({})))</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// isReadonly: 检查一个对象是否是由 readonly 创建的只读代理</span></span>
<span class="line"><span style="color:#E1E4E8;">      console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">isReadonly</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">readonly</span><span style="color:#E1E4E8;">({})))</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// isProxy: 检查一个对象是否是由 reactive 或者 readonly 方法创建的代理</span></span>
<span class="line"><span style="color:#E1E4E8;">      console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">isProxy</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">readonly</span><span style="color:#E1E4E8;">({})))</span></span>
<span class="line"><span style="color:#E1E4E8;">      console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">isProxy</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">reactive</span><span style="color:#E1E4E8;">({})))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">{}</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">h2</span><span style="color:#24292E;">&gt;响应式数据的判断&lt;/</span><span style="color:#22863A;">h2</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lang</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;ts&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { defineComponent, isProxy, isReactive, isReadonly, isRef, reactive, readonly, ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">defineComponent</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  name:</span><span style="color:#032F62;">&#39;App&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// isRef: 检查一个值是否为一个 ref 对象</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// isReactive: 检查一个对象是否是由 reactive 创建的响应式代理</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// isReadonly: 检查一个对象是否是由 readonly 创建的只读代理</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// isProxy: 检查一个对象是否是由 reactive 或者 readonly 方法创建的代理</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">setup</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// isRef: 检查一个值是否为一个 ref 对象</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">isRef</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">({})))</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// isReactive: 检查一个对象是否是由 reactive 创建的响应式代理</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">isReactive</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">reactive</span><span style="color:#24292E;">({})))</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// isReadonly: 检查一个对象是否是由 readonly 创建的只读代理</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">isReadonly</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">readonly</span><span style="color:#24292E;">({})))</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// isProxy: 检查一个对象是否是由 reactive 或者 readonly 方法创建的代理</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">isProxy</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">readonly</span><span style="color:#24292E;">({})))</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">isProxy</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">reactive</span><span style="color:#24292E;">({})))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">{}</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span></code></pre></div>`,3),e=[o];function t(c,r,E,y,i,d){return n(),a("div",null,e)}const f=s(p,[["render",t]]);export{_ as __pageData,f as default};
