[服务器端网页编程](https://developer.mozilla.org/zh-CN/docs/Learn/Server-side)

服务器端网页编程（服务端编程）

## 静态网页和动态网页

动和静指的是是否有数据交互，而不是网页内容的动态效果。

静态网页是指内容不会发生变化的网页，它们通常是由 HTML 编写而成，不需要服务器端脚本或数据库支持。
静态网页也可以有动态效果，比如gif图、滚动字幕。

动态网页则是指内容会随着用户的操作而发生变化的网页，它们通常需要服务器端脚本或数据库支持。

静态网页和动态网页之间的主要区别在于它们的交互性和更新方式。静态网页由于很多内容都是固定的，在功能方面有很大的限制，所以交互性较差。而动态网页则可以实现更多的功能，如用户的登录、注册、查询等。此外，静态网页相对更新起来比较麻烦，适用于一般更新较少的展示型网站；而动态网页则可以随时更新和维护。

静态网页相对于动态网页更新起来比较麻烦，因为静态网页的内容是固定的，如果要更新内容，就需要手动修改 HTML 文件，然后再上传到服务器上，这样比较繁琐。而动态网页则可以通过服务器端脚本或数据库支持实现内容的动态更新 。

## 服务器端网页编程（服务端编程）

与服务端编程这个概念相对的是客户端编程，其实就是前端。

服务端编程可以动态地显示所要求的不同数据，用来编写动态网页。

为什么要用动态网页？

以微博为例，每一条微博的格式大致相同：上面是头像、昵称、发布时间，中间是正文内容，正文可以带图片，底部是一些功能：转发、评论、点赞；用静态页面去做，每一条微博都要写一遍这样的布局；用动态页面去做，有需要时动态地在这些模板（指html结构）中更新数据展示就行了；
> 更新的就是模板的数据

开始服务器端编程通常比客户端编程要简单，因为动态的页面倾向于执行非常类似的操作（从数据库中获取数据然后显示到一个页面中，确认用户输入的数据以及保存到一个数据库中，检查用户的权限和登陆用户，以及更多），并且它是用能使这些和其他的常见网页服务端操作变简单的网页框架来构建的。

## 模块一

### 什么是 web 服务器？

web 服务器可以代指硬件或软件，或者是它们协同工作的整体。

- 软件部分，web 服务器包括控制网络用户如何访问托管文件的几个部分，至少是一台 HTTP 服务器。一台 HTTP 服务器是一种能够理解 URL（网络地址）和 HTTP（浏览器用来查看网页的协议）的软件。一个 HTTP 服务器可以通过它所存储的网站域名进行访问，并将这些托管网站的内容传递给最终用户的设备。
- 硬件部分，web 服务器是一台存储了 web 服务器软件以及网站的组成文件（比如，HTML 文档、图片、CSS 样式表和 JavaScript 文件）的计算机。它接入到互联网并且支持与其他连接到互联网的设备进行物理数据的交互。

> 通俗来讲，硬件层面，服务器就是一台配置比PC更高的计算机。软件层面，服务器就是一个应用软件，比如Nginx。
> 拓展：服务器也是计算机，也有操作系统，一般都是Linux系统。

基本上，当浏览器需要一个托管在网络服务器上的文件的时候，浏览器通过 HTTP 请求这个文件。当这个请求到达正确的 web 服务器（硬件）时，HTTP 服务器（软件）收到这个请求，找到这个被请求的文档（如果这个文档不存在，那么将返回一个 404 响应），并把这个文档通过 HTTP 发送给浏览器。

要发布一个网站，你需要一个静态或动态的服务器。

静态 web 服务器（static web server）由一个计算机（硬件）和一个 HTTP 服务器（软件）组成。我们称它为“静态”是因为这个服务器把它托管文件的“保持原样”地传送到你的浏览器。

动态 web 服务器（dynamic web server）由一个静态的网络服务器加上额外的软件组成，最普遍的是一个应用服务器和一个数据库。我们称它为“动态”是因为这个应用服务器会在通过 HTTP 服务器把托管文件传送到你的浏览器之前会对这些托管文件进行更新。

举个例子，要生成你在浏览器中看到的最终网页，应用服务器或许会用一个数据库中的内容填充一个 HTML 模板。像 MDN 或维基百科这样的网站有成千上万的网页。通常情况下，这类网站只由几个 HTML 模板和一个巨大的数据库组成，而不是成千上万的静态 HTML 文档。这种设置使得维护和提供内容更加容易。


### 托管文件

一个网络服务器首先需要存储这个网站的文件，也就是说所有的 HTML 文档和它们的相关资源，包括图片、CSS 样式表、JavaScript 文件、字体以及视频。

严格来说，你可以在你自己的计算机上托管所有的这些文件，但是在一个专用的 web 服务器上存储它们会方便得多，因为它

- 专用 web 服务器可用性更强（会一直启动和运行）
- 除去停机时间和系统故障，专用 web 服务器总是连接到互联网。
- 专用 web 服务器可以一直拥有一样的 IP 地址，这也称为专有 IP 地址（不是所有的 ISP 都会为家庭线提供一个固定的 IP 地址）
- 专用 web 服务器往往由第三方提供者维护


### HTTP

web 服务器提供了 HTTP（Hypertext Transfer Protocol，超文本传输协议）支持。

**协议是一套为了在两台计算机间交流而制定的规则。**HTTP 是一个文本化的（textual），无状态的（stateless）协议。

文本化
- 所有的命令都是纯文本（plain-text）且人类可读（human-readable）的。

无状态
- 无论是服务器还是客户都不会记住之前的交流。举个例子，仅依靠 HTTP，服务器不能记住你输入的密码或者你正处于业务中的哪一步。你需要一个应用服务器来进行这样的工作。

HTTP 协议的特点：
- 通常只有客户端可以发送 HTTP 请求，只会发送到服务器。服务器通常只能响应客户端的 HTTP 请求。服务器也可以通过一种叫做服务器推送的机制，在客户请求之前，将数据填充到客户的缓存中。
- 当通过 HTTP 请求一个文件时，客户端必须提供这个文件的 URL。
- 网络服务器必须应答每一个 HTTP 请求，至少也要回复一个错误信息。

在 web 服务器上，HTTP 服务器负责处理和响应传入的请求。
- 当收到一个请求时，HTTP 服务器首先要检查所请求的 URL 是否与一个存在的文件相匹配。
- 如果是，网络服务器会传送文件内容回到浏览器。如果不是，服务器会检查是否应该动态生成请求所需的文件（参见静态和动态内容）。
- 如果两种处理都不可能，网络服务器会返回一个错误信息到浏览器，最常见的是 404 Not Found。404 错误太常见以至于很多网页设计者花费许多时间去设计 404 错误页面。

### 静态和动态内容

一个服务器可以提供静态或者动态的内容。静态意味着“保持原样地提供”。“动态”意味着服务器会处理内容甚至实时地从一个数据库中产生它。































